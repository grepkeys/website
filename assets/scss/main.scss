*, *:before, *:after {
  // Zero default spacing and padding to get a fresh start
  margin: 0;
  padding: 0;

  // Use a more intuitive box model
  box-sizing: border-box;
}

// Get webfonts
@import "fonts";

//
// Layout
//

html { font-size: 19px; }

@media all and (max-width: 560px) {
  html { font-size: 17px; }
}

@media all and (max-width: 360px) {
  html { font-size: 15px; }
}


// Keep the textblock at a reasonable line length in the center of the screen,
// and prevent it from being flush against the sides of the display on mobile.
// We save the amount added left and right as padding because we need to reuse
// it later.
$textblock-side-padding: 1rem;
body {
  padding: 0 $textblock-side-padding;
  max-width: 35rem;
  margin: 0 auto;
}

//
// Type
//

// Colours

$fg-color:   #333333;
$bg-color:   #fdfdfd;
// ---
$lime:       #00af8b;
$brightlime: #00ffca;

// Fonts

$sys-fonts:
  system-ui,
  -apple-system,
  BlinkMacSystemFont,
  "Segoe UI",
  "Roboto",
  "Oxygen-Sans",
  "Ubuntu",
  "Cantarell",
  "Lucida Grande",
  "Helvetica Neue",
  Helvetica,
  arial,
  sans-serif,
  "Apple Color Emoji",
  "Segoe UI Emoji",
  "Segoe UI Symbol";

$serif-fonts: ff-more, $sys-fonts;
$sans-fonts: ff-nuvo, $serif-fonts;

// Use serif font for actual body content, and use sans for everything else
body {
  font-family: $sans-fonts;
  font-size: 1rem;
  line-height: 1.6;
}
main {
  font-family: $serif-fonts;
}

// Other

// Enable automatic hyphenation, but only for the main content of the page --
// not for, e.g., navigation.
main {
  hyphens: auto;
}

// Lobotomised owl selector -- adds 0.75em space between adjacent siblings. See
// http://alistapart.com/article/axiomatic-css-and-lobotomized-owls/
main * + * {
  margin-top: 1em;
}

// Apply previously-defined base colours
body {
  color: $fg-color;
  background-color: $bg-color;
}

// Always use subpixel font rendering
html {
  -webkit-font-smoothing: subpixel-antialiased;
}

// Always use all basic font features, plus proportional text figures to make
// numbers blend into the text
body {
  font-variant-ligatures: common-ligatures contextual;
  font-variant-numeric: oldstyle-nums proportional-nums;
  font-kerning: normal;
}

//
// Headings and titles
//

// Basic headings used only for structure and hierarchy within a page's main
// content

// Similar styles to The Elements of Typographic Style -- letterspaced all small
// caps for heading 1, and italic for heading 2
h1 {
  font-size: 1rem;
  font-weight: inherit;
  font-variant-caps: all-small-caps;
  letter-spacing: 0.08em;
  margin-top: 2.5rem;
  margin-bottom: 1.5rem;
}

h2 {
  font-size: 0.9rem;
  font-weight: inherit;
  font-style: italic;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

// The title of the current page

#title {
  // As the fonts we use do not have optical sizes, we compensate as best as we
  // can by slightly reducing letter spacing
  letter-spacing: -0.01rem;
  font-size: 1.5rem;
}

// Add some space above and below to make the page less cramped and to emphasise
// the title more. This space reduces very quicly when the viewport's height is
// reduced.
#topsection {
  margin-top: calc(2.5rem + 10vh);
  margin-bottom: calc(0.5rem + 5vh);
}

//
// Links
//

// Clear default link formatting
a {
  text-decoration: none;
  color: inherit;
}

// Fade link text upon click to make website feel more interactive, without
// being distracting (like hover)
a:active {
  color: rgba($fg-color, 0.5);
}

// Use a trick using a gradient to create a very basic, easy to control and
// position underline. A text shadow with the same colour as the page background
// allows avoiding descenders.
//
// The only links we want to have this formatting are in the main tag (i.e. not
// the navigation)
//
// We also make the underline 0.05em shorter either side. This helps minimise
// small bits of underline sticking out from descenders at the beginning or end
// of a link.
$link-inset-length: 0.05em;
main a {
  text-shadow:
   -0.05em -0.05em 0 $bg-color,
    0.05em -0.05em 0 $bg-color,
   -0.05em  0.05em 0 $bg-color,
    0.05em  0.05em 0 $bg-color,
   -0.1em   0      0 $bg-color,
    0.1em   0      0 $bg-color,
   -0.1em   0      0 $bg-color,
    0.1em   0      0 $bg-color;

  background-image: linear-gradient($fg-color, $fg-color);
  background-size: calc(100% - #{$link-inset-length} * 2) 1px;
  background-repeat: no-repeat;
  background-position: $link-inset-length 92%;
}

// Remove descender avoidance on selection because it looks very strange to have
// a white shadow around links.
main a::selection {
  text-shadow: none;
}

//
// Card list
//

// Use CSS Grid to align cards
//
// Normal card pages only have one column, so the only reason we keep CSS Grid
// there is to neatly handle the gaps between items. On pages that require
// smaller cards we make the number of columns as high as possible, maintaining
// that the width of one card never gets lower than 10rem.
.cards {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  grid-gap: 1rem;
}
.smallcards {
  grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
}

.card {
  border: 1px solid rgba($fg-color, 0.1);
  border-radius: 4px;
  background-color: white;
}

// Add padding to each card. We do this by adding it to every direct child of
// the link in the card, since the link or the div surrounding it cannot have
// padding, as this makes it that the card is only clickable when the mouse is
// over the card's content, rather than the entire card.
.card a > * {
  padding: 0.75rem;
}

// Add a light shadow to each card, which expands upon hover. The card also
// moves up an amount that counteracts the expansion of the shadow exactly on
// hover.
//
// We reuse these shadows later, so we put them into mixins.

@mixin light-shadow {
  box-shadow: 0 1px 4px rgba($fg-color, .08);
}

@mixin strong-shadow {
  box-shadow: 0 4px 9px rgba($fg-color, .1);
}

.card {
  @include light-shadow;
  transition: box-shadow 300ms ease-out, transform 300ms ease-out;
}
.card:hover {
  @include strong-shadow;
  transform: translateY(-3px);
}

// Slightly larger (than body text) font for the title of each card
.cardtitle {
  font-size: 1.1rem;
}

//
// Navbar
//

nav {
  // Make sure the navbar always stays in one place -- at the top of the screen.
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 99;

  // Offset it from the main content through the use of a smaller typeface, an
  // almost-opaque white background that contrasts slightly with the site's
  // light grey background, and a very light shadow.
  background-color: rgba(white, 0.97);
  font-size: 0.85rem;
  box-shadow: 0 0 10px rgba($fg-color, 0.1);

  // Ensure that all elements of the navbar are placed on one line
  display: flex;

  // Give the navbar's content some room to breathe, using the same amount left
  // and right as the textblock to make the edge content of the navbar line up
  // with the textblock at smaller sizes
  padding: 0.6rem $textblock-side-padding;

  // Transition to make autohide (from assets/js/main.js) animate smoothly
  //
  // To see why box-shadow is animated take a look at the afore-mentioned
  // JavaScript file.
  transition: top 200ms ease-out, box-shadow 300ms ease-out;
}

#navlinks,
#navpageinfo {
  // Allow overlapping the navbar and 'titlebar', as only one of them is visible
  // at any given point
  position: absolute;

  // Prevent wrapping
  white-space: nowrap;

  // Center across entire width navbar, so not including logo
  left: 50%;
  transform: translateX(-50%);

  // Fade change between navbar and titlebar
  transition: visibility 200ms linear, opacity 200ms linear;

  // Undo centering and snap navbar content to right edge of screen, keeping the
  // same amount of padding that both the navbar and textblock use, if the
  // viewport is too narrow to accomodate centering.
  @media all and (max-width: 37rem) {
    left: unset;
    right: $textblock-side-padding;
    transform: none;
  }
}

// Collapse navigational links into one line
#navlinks {
  display: flex;
  list-style-type: none;
  flex-direction: row;
  flex-wrap: wrap;
}

// Add some space between nav links
#navlinks li + li {
  margin-left: 1em;
}

// Fade any and all links inside the navbar, making them fully coloured and
// nudging them up slightly on hover
nav a {
  display: inline-block;
  color: rgba($fg-color, 0.5);
  transition: color 250ms ease-out, transform 250ms ease-out;
}
nav a:hover {
  transform: translateY(-2px);
  color: $fg-color;
}

// Make GrepKeys logo green on hover and black otherwise to offset it from other
// navbar elements
#navlogo {
  color: $fg-color;
}
#navlogo:hover {
  color: $lime;
}

// Make the current page you are on more prominent by not fading it
#navthispage {
  color: $fg-color;
}

// Fade divider between navbar section and title to make it less prominent
#navdivider {
  color: rgba($fg-color, 0.1);
}

//
// Homepage and 404
//

// Vertically center content on homepage using CSS Grid
.home {
  display: grid;
  align-content: center;
  height: 100vh;
}

// Use larger font for greeting on homepage to counteract large amount of
// whitespace, and use serif to convey the main 'identity' of GrepKeys right
// from the start.
#greeting {
  font-family: $serif-fonts;
  font-size: 1.3rem;
}

// Make the main 'Hi' greeting larger than the surrounding text to give it more
// importance
#bighi {
  font-family: $sans-fonts;
  font-size: 1.5rem;
}

// Reduce space between 'Hi' and rest of greeting
#bighi + p {
  margin-top: 0.5rem;
}

// Make the links on the homepage lime-green and add a slightly rounded green
// highlight upon hover.
#greeting a {
  color: $lime;
  border-radius: 3px;
  transition: background-color 500ms cubic-bezier(0, 0, 0.33, 1);
}
#greeting a:hover {
  background-color: rgba($brightlime, 0.2);
}
#greeting a:active {
  color: rgba($lime, 0.5);
}

// Ensure background image on homepage is centred and covers the entire viewport
.home {
  background-size: cover;
  background-position: center;
}

// Make this background image much less obtrusive by covering it with a
// high-opacity field the same colour as the background on other pages
.home:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.9;
  z-index: -1;
  background-color: $bg-color;
}

//
// List of switches
//

// Add a little space below each switch manufacturer's section, thereby also
// adding space between the entire switches section and <main>
.switches section {
  margin-bottom: 1rem;
}

// Make heading above switches section more subtle as we want the user to focus
// on the switches and the article, not an unimportant heading.
.switches > header {
  font-variant-caps: all-small-caps;
  color: rgba($fg-color, 0.4);
  letter-spacing: 0.02em;
  margin-bottom: 0.2rem;
}

// Make manufacturer label less prominent
.manufacturer {
  font-size: 0.8rem;
  font-variant-caps: all-small-caps;
  color: rgba($fg-color, 0.4);
  letter-spacing: 0.02em;

  text-align: right;
  float: right;
  margin-left: 0.5rem;
}

// Style switches like cards on list pages, but with a less bright background
.switch {
  display: inline-block;
  margin-right: 0.25rem;
  margin-bottom: 0.5rem;

  border: 1px solid rgba($fg-color, 0.1);
  border-radius: 3px;

  // We use both opacity and background-color to make sure the colour boxes and
  // text are also gently faded
  opacity: 0.8;
  background-color: rgba(white, 0.8);
}

// Use same trick as with cards on list pages to ensure you can click anywhere
// on the switch
.switch a > * {
  padding: 0.4rem;
  padding-bottom: 0.2rem;
}

// Shadow from list cards, but with added background colour and opacity
// transition
.switch {
  @include light-shadow;
  transition: box-shadow 300ms ease-out,
    background-color 300ms ease-out,
    opacity 300ms ease-out;
}
.switch:hover {
  @include strong-shadow;
  background-color: white;
  opacity: 1;
}

// A small square of colour with a very subtle rounded border before each label
.switchcolourbox {
  display: inline-block;
  width: 0.7rem;
  height: 0.7rem;
  margin-right: 0.2rem;

  border: 1px solid rgba($fg-color, 0.2);
  border-radius: 3px;
}

// Use a small font for switch labels to make them less obtrusive
.switch a {
  font-size: 0.7rem;
}

// Place switch label on the same line as the colour box and correct its
// positioning
.switch p {
  display: inline-block;
  transform: translateY(-0.1rem);
}

// Colour box palette
.cherry-black,
.box-black        { background-color: #111111; }
.cherry-blue,
.gateron-blue     { background-color: #2a9cf9; }
.cherry-brown,
.gateron-brown,
.box-brown        { background-color: #7c441e; }
.cherry-clear     { background-color: #dddddd; }
.cherry-green     { background-color: #54d04b; }
.cherry-red,
.gateron-red,
.box-red          { background-color: #f7513a; }
.cherry-silentred { background-color: #f58c8c; }
.cherry-speed     { background-color: #b3b5b7; }
.razer-green      { background-color: #71d112; }
.razer-yellow     { background-color: #ffe900; }
.razer-orange     { background-color: #ffb200; }
.razer-purple     { background-color: #7819e5; }

//
// Images and video
//

// Make all images and video responsively fit the environment they are in
img,
video {
  width: 100%;
  height: auto;
}

// Some setup needed for the fixed aspect ratio image wrapper to work
.imgaspectkeep img {
  position: absolute;
  top: 0;
}
.imgaspectkeep {
  position: relative;
  height: 0;
}

// Show a light grey box that images load into
.imgaspectkeep {
  background-color: rgba($fg-color, 0.05);
}

// Add a subtle rounded border to hero images to delineate their edges, as often
// they have a white background that clashes with the site's background colour.
.heroimg {
  border: 1px solid rgba($fg-color, 0.1);
  border-radius: 3px;
}

// This ensures that the image itself is also rounded, rather than only the
// .heroimg wrapper
.heroimg * {
  border-radius: 3px;
}

// Make hero images wider than the textblock if possible while keeping their
// previous positioning
.heroimg {
  max-width: 40rem;
  margin: 0 auto;
}

// Make image captions less obtrusive and offset them from the rest of the text
$caption-color: rgba($fg-color, 0.9);
figcaption {
  font-family: $sans-fonts;
  font-size: 0.8rem;
  text-align: center;
  color: $caption-color;

  // Reduce space between image and caption
  margin-top: 0.5rem;

  // Increase space above any link underlines that may be present in the
  // caption, and make the underlines' colour consistent with the caption.
  a {
    background-image: linear-gradient($caption-color, $caption-color);
    background-position: $link-inset-length 94%;
  }
}

//
// 'Buy now' button
//

.buybutton {
  display: inline-block;
  padding: 0.5rem;

  border: 1px solid rgba($fg-color, 0.1);
  border-radius: 3px;

  // Original line height makes padding uneven
  line-height: 1.1;
}

// Shadow and background tinted lime-green react to hover
.buybutton {
  background-color: rgba($brightlime, 0.1);
  @include light-shadow;
  transition: background-color 250ms ease-out, box-shadow 250ms ease-out;
}
.buybutton:hover {
  background-color: rgba($brightlime, 0.25);
  @include strong-shadow;
}

// Slot in next to title
//
// The margin makes sure wrapping occurs a little before the text juts against
// the button's edge
.buybutton {
  float: right;
  margin-left: 0.7rem;
}
#title {
  display: inline;
}

//
// Lists
//

// Remove regular list formatting and indent lists very slightly from the edge
// of the textblock
main ul,
main ol {
  list-style-type: none;
  margin-left: 1.7rem;
}

// Add some space between consecutive list items
main li + li {
  margin-top: 0.25rem;
}

// Create a counter for each ordered list that stores the index of each list
// item label
main ol li {
  counter-increment: listcounter;
}

// Basic code to position some text of choice in front of each list item
main li:before {
  position: absolute;
  display: inline-block;
  width: 2rem;
  margin-left: -2rem;
  padding-right: 1rem;
  text-align: right;

  // Slightly fade list item labels to offset them from the main text
  color: rgba($fg-color, 0.9);
}

// Use tabular text figures for ordered list labels to make sure the numbers all
// line up in a neat column. Additionally, we remove the full stop after each
// list item as it is not needed -- whitespace is enough.
main ol li:before {
  content: counter(listcounter);
  font-variant-numeric: oldstyle-nums tabular-nums;
}

// The 'bullet' character is too thick in FF More, so we use the bold version
// of the midpoint (which is too thin in the regular weight).
main ul li:before {
  content: '·';
  font-weight: 600;
}

//
// Other elements
//

// Subtle copyright notice that stays at the bottom of the viewport if the
// content above it doesn't fill the entire viewport, and otherwise has a little
// bit of space above it that dynamically adjusts based on the viewport height.
//
// The letterspacing is used to simulate optical sizing
body {
  height: 100vh;
  display: flex;
  flex-direction: column;
}
footer {
  // We use padding to add the minimum space above the footer so that it does
  // not interfere with margin-top: auto
  padding-top: calc(1rem + 15vh);
  margin-bottom: 1rem;
  margin-top: auto;

  font-size: 0.6rem;
  letter-spacing: 0.04em;
}

// Replace horizontal line element with three centered middots, spaced with en
// quads
hr {
  text-align: center;
  margin-left: auto;
  margin-right: auto;
  margin-top: 0.5rem;
  border: none;
}
hr:before {
    content: '· · ·';
    display: block;
    font-size: 1.5rem;
}

// A div that spans the entire screen width
.fullwidth {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

// Remove highlight colour that appears when you tap elements on mobile
// browsers
html {
  -webkit-tap-highlight-color: transparent;
}

// Only allow selextions in <main>, the text part of the homepage, and finally
// the site's title, since only here is any actual textual content -- everywhere
// else is UI that does not need to be selected.
body {
  user-select: none;
}
main,
#greeting {
  user-select: text;
}

// Selections
::selection {
  background: rgba($brightlime, 0.15);
}

// Always show scroll bar (prevents centering from changing from page to page)
html {
  overflow-y: scroll;
}
