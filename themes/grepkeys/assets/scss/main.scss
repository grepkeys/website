//
// Normalise
//

@import "modern-normalize";

//
// Layout
//

// Set a nice, large font size
html { font-size: 21px }

// Smaller font size in mobile
$mobilebreakpoint: 480px;
@media all and (max-width:$mobilebreakpoint) {
  html { font-size: 18px }
}

// Even larger font size for full screen desktop usage
$fullscreenbreakpoint: 1700px;
@media all and (min-width:$fullscreenbreakpoint) {
  html { font-size: 24px }
}

// Fix up spacing and padding
* {
  margin: 0;
  padding: 0;
}

#content {
  padding: 1rem;      // A little padding on all sides
  max-width: 27.8rem; // Keep the container from getting overly wide
  margin-left: auto;  // Make margins even
  margin-right: auto;
}

//
// Type
//

// Basic typographic settings

// Fonts
$sansfontstack: ff-nexus-sans, "Nexus Sans Pro", sans-serif;
$seriffontstack: ff-nexus-mix, "Nexus Mix Pro", $sansfontstack;

// Colours
$fg-color:   #111111;
$bg-color:   #fafafa;
// ---
$lime:       #018f69;
$brightlime: #0cf28f;
$grey:       #777777;

body {
  font-family: $seriffontstack;
  font-size: 1rem;
  line-height: 1.5;
  hyphens: auto;
}

// Space between paragraphs, but make sure not to add it for the very last
// paragraph
p + * {
  margin-top: 1em;
}

// Lower contrast by making the text dark grey and the background light grey
body {
  color: $fg-color;
  background-color: $bg-color;
}

// Always use subpixel font rendering
html {
  -webkit-font-smoothing: subpixel-antialiased;
}

// A bunch of OpenType features
body {
  font-variant-ligatures: common-ligatures contextual;
  font-variant-numeric: oldstyle-nums proportional-nums;
  font-kerning: normal;
}

//
// Headings and titles
//

// Basic headings used only for structure and hierarchy within a page's main
// content

h1 {
  font-size: 1rem;
  font-weight: inherit;
  font-variant-caps: all-small-caps;
  letter-spacing: 0.08em;
  margin-top: 1.5rem;
  margin-bottom: 1rem;
}

h2 {
  font-size: 0.9rem;
  font-weight: inherit;
  font-style: italic;
  margin-top: 1.2rem;
  margin-bottom: 0.5rem;
}

// The title of the current page

header {
  font-family: $sansfontstack;
  font-size: 1.5rem;
  margin-bottom: 1rem;
  letter-spacing: -0.01rem;
}

//
// Links
//

// Use a trick using a gradient to create a very basic, easy to control and
// position underline. I decided to use this simpler approach despite it not
// avoiding descenders to keep complexity to a minimum.
//
// The only links we want to have this formatting are in the article tag (i.e.
// not the navigation)
article a:link,
article a:visited {
  color: inherit;
  text-decoration: none;

  background-image: linear-gradient(to right, $fg-color 100%, rgba(0,0,0,0) 0);
  background-size: 1px 1px;
  background-repeat: repeat-x;
  background-position: 0 calc(1em + 4px);
}

//
// Card list
//

// We need to use this exact timing of transition several times, so put it into
// a mixin for reusability.
@mixin card-transition($property) {
  transition: 300ms $property cubic-bezier(0, 0, 0.33, 1);
}

// Base format
.card {
  width: 100%;

  padding: 0.75rem;
  margin-bottom: 1rem;

  border-radius: 0.1rem;

  background-color: white;
}

// Add a shadow to each card, which becomes green and moves down slightly upon
// hover.
.card {
  box-shadow: 0 1px 15px rgba(27, 31, 35, .15);
  @include card-transition(all);
}
.card:hover {
  box-shadow: 0 2px 15px rgba($lime, .3);
  transform: translateY(-1px);
}

// Slightly larger font for the title of each card
.card .cardtitle {
  font-size: 1.1rem;
}

// Remove the underlink links usually get (the overspecificity's purpose is to
// override the link formatting's high specificity)
.card .cardlink {
  background-image: none;
}

//
// Nav bar
//

// Make nav bar sans serif to offset it from the body of the website and add a
// little space below.
nav {
  font-family: $sansfontstack;
  margin-bottom: 1rem;
}

// Collapse nav bar list items into one line
nav li {
  display: inline;
  margin-right: 1rem;
}

// Fade nav bar items, but make them fully coloured on hover
nav li a {
  color: $grey;
  text-decoration: none;
  transition: 250ms color ease-out;
}
nav li a:hover {
  color: $fg-color;
}

// Make the link to the website's homepage more prominent than the other nav
// bar's links by making it bold, unfaded and become green upon hover
#navtitle {
  color: $fg-color;
  font-weight: bold;
}
#navtitle:hover {
  color: $lime;
}

//
// Homepage
//

// Vertically center (well, not really -- a little less space on top than on the
// bottom) content on homepage
.home article {
  margin-top: calc(30vh - 8rem);
}

// Make the text above the list of pages larger (since the pages are absolutely
// huge it looks a bit odd to have regularly-sized text next to them)
#greeting {
  font-size: 1.5rem;
}

// List of pages

// Remove standard link formatting
#pages a {
  background-image: none;
}

// Use larger fonts and add some space above and below
#pages div {
  font-size: 3rem;
  margin-top: 1rem;
}

// Add a green highlight that grows on height upon hover for the important pages
// of the website
.mainpage p {
  position: relative;
  display: inline-block;
}
.mainpage p::after {
  content: "";
  position: absolute;
  width: 100%;
  background: rgba($brightlime, 0.5);
  left: 0;
  bottom: 0;
  height: 0.6em;
  z-index: -1;
  transition: 500ms height cubic-bezier(0.35, 0, 0, 1);
}
.mainpage p:hover::after {
  height: 1em;
}

// The less important pages switch to a sans serif font in a faded grey to give
// more emphasis to the more important pages
.fadedpage {
  font-family: $sansfontstack;
  color: $grey;
}

//
// Other elements
//

// Subtle copyright notice that switches to the optical weight ideal for the
// smaller size, and dynamically adjusts the space above it for the screen size.
//
// We use flex to add half the viewport's height to the bottom of the page, and
// then position the footer _inside_ this added space.
//
// We also remove the margin usually added to the bottom of the page, instead
// moving the footer up into the half-viewport space.
footer {
  display: flex;
  font-size: 0.5rem;
  height: 50vh;
  margin-bottom: -1rem;
}
footer p {
  align-self: flex-end;
  padding-bottom: 1rem;
}

// Abbreviations

// Small-caps
abbr {
  font-variant-caps: all-small-caps;
  letter-spacing: 0.05em;
}

// Remove dotted underline
abbr[title] {
  text-decoration: none;
}

// Show a help cursor
abbr[title] {
  cursor: help;
}

// Make all images fit the environment they are in
article img {
  width: 100%;
}

// Selections

::selection {
  background: rgba($brightlime, 0.2);
}
